(window.webpackJsonp=window.webpackJsonp||[]).push([[72],{246:function(e,a,t){e.exports=t.p+"assets/img/2019-08-21-09-32-24.f59467f0.png"},852:function(e,a,t){"use strict";t.r(a);var r=t(38),v=Object(r.a)({},function(){var e=this,a=e.$createElement,r=e._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"vue基础入门"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#vue基础入门","aria-hidden":"true"}},[e._v("#")]),e._v(" vue基础入门")]),e._v(" "),r("h2",{attrs:{id:"_1-vue初体验"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-vue初体验","aria-hidden":"true"}},[e._v("#")]),e._v(" 1.vue初体验")]),e._v(" "),r("h3",{attrs:{id:"_1-1-vue简介"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-vue简介","aria-hidden":"true"}},[e._v("#")]),e._v(" 1.1.vue简介")]),e._v(" "),r("h4",{attrs:{id:"_1-1-1-vue是什么？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-1-vue是什么？","aria-hidden":"true"}},[e._v("#")]),e._v(" 1.1.1.vue是什么？")]),e._v(" "),r("p",[e._v("Vue (读音 /vjuː/，类似于 view) 是一套用于构建用户界面的渐进式框架，什么叫做渐进式呢？通俗的讲就是一层一层的，一步一步的来做事情的方式。什么又是框架呢？可以理解为一套完整的解决方案。总结起来理解，vue是一个框架，提供了一套完整的解决方案，同时这个框架是渐进式的，你不必使用整个框架的所有内容，可以根据自身的应用场景只使用一部分")]),e._v(" "),r("p",[r("img",{attrs:{src:t(246),alt:""}})]),e._v(" "),r("h4",{attrs:{id:"_1-1-2-框架和库的区别？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-2-框架和库的区别？","aria-hidden":"true"}},[e._v("#")]),e._v(" 1.1.2.框架和库的区别？")]),e._v(" "),r("p",[e._v("框架：字面上理解为架子，会基于自身的特点为用户提供一整套的解决方案，倾向于创造一套需要你来遵守的规则和范例，你可以基于这套架子快速实现应用，但前提是你必须按照它的规则来写，例如：ThinkPHP框架，必须要求你按照它的命名规则、代码组织结构来写")]),e._v(" "),r("p",[e._v("库：讲代码集合成的一个产品，供程序员调用，例如：jquery库，只需要引入使用它的功能就可以了，至于你的应用怎样架构，项目目录怎样组织它并不关心")]),e._v(" "),r("p",[e._v("本质上它们都是一样的，框架可以理解为库的超集，框架中可以引入各种库")]),e._v(" "),r("h4",{attrs:{id:"_1-1-3-vue渐进式使用场景理解"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-3-vue渐进式使用场景理解","aria-hidden":"true"}},[e._v("#")]),e._v(" 1.1.3.vue渐进式使用场景理解")]),e._v(" "),r("div",{staticClass:"tip custom-block"},[r("p",[e._v("1.刚学完前端，进入公司，维护一个老系统，这个时候的应用场景就是收集表单信息，发送到后台，这些事情jquery可以做，如果你想引入新技术，可以直接引入vuejs核心库，把vue当作一个js库来使用，主要做表单数据收集、验证、提交")]),e._v(" "),r("p",[e._v("2.当你在上一步引入vue以后，发现用得越来越爽，团队也开始接受了vue，领导也觉得效率得到了提升，于是你参与到了新项目，承担起了常规的业务开发，在这个新项目中，你需要做到就是渲染商品列表和商品详情页，你开始把整个页面的dom都交给vue来管理，原来jquery都只是不断的找dom，然后操作dom，而使用vue以后你发现根本不需要再去操作dom元素了，只需要关注数据的变化，数据变化了dom就会变化，这个时候，你发现jquery并没有什么用了，而且jquery用起来并没有vue那么爽")]),e._v(" "),r("p",[e._v("3.接到新任务，完成一个移动站，于是你又去学习了webpack、vue-router，这样你就开始了走上了前端工程化的道路")]),e._v(" "),r("p",[e._v("4.做完移动站后，又接到更大的项目，这个项目需要和后端接口频繁沟通，大量数据在组件间共享，这个时候，你听说了vuex可以很方便的做数据状态管理，因此，你又用上了vuex")]),e._v(" "),r("p",[e._v("5.随着公司用户增长，你需要关注更多的性能和seo方面的问题，因此，你又用上了后端渲染 ssr")]),e._v(" "),r("p",[e._v("6.此时，你已经是10多人的前端leader了，为了保障团队高质量输出，你开始研究如何写单元测试...")])]),e._v(" "),r("h3",{attrs:{id:"_1-2-安装和使用"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-安装和使用","aria-hidden":"true"}},[e._v("#")]),e._v(" 1.2.安装和使用")]),e._v(" "),r("h4",{attrs:{id:"_1-2-1-安装"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-1-安装","aria-hidden":"true"}},[e._v("#")]),e._v(" 1.2.1.安装")]),e._v(" "),r("h4",{attrs:{id:"_1-2-2-使用"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-2-使用","aria-hidden":"true"}},[e._v("#")]),e._v(" 1.2.2.使用")]),e._v(" "),r("h3",{attrs:{id:"_1-3-vue实例"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-vue实例","aria-hidden":"true"}},[e._v("#")]),e._v(" 1.3.vue实例")])])},[],!1,null,null,null);a.default=v.exports}}]);